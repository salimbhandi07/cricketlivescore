{"version":3,"sources":["img/vs.png","logo.svg","componets/Navbar.js","api/Api.js","MyCard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","theme","console","log","Navbar","AppBar","color","position","style","flexFlow","Toolbar","IconButton","edge","Typography","variant","flexGrow","Button","API_KEY","MyCard","match","useState","detail","setDetail","open","setOpen","handleClick","id","url","fetch","then","response","json","catch","error","getMatchDetail","data","handleOpen","handleClose","Card","marginTop","CardContent","Grid","container","justify","alignItems","spacing","item","width","height","src","require","alt","CardActions","onClick","unique_id","marginLeft","Date","dateTimeGMT","toLocaleString","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","stat","fontStyle","fontWeight","matchStarted","score","DialogActions","autoFocus","App","matches","setMatches","useEffect","getMatches","alert","className","sm","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b15f9a45.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vs.7419083b.png\";","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","\r\nimport React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  makeStyles,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyle = makeStyles((theme) => {\r\n  console.log(\"STYLE\", theme);\r\n});\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <div>\r\n      <AppBar color=\"primary\" position=\"static\" style={{ flexFlow: 1 }}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" color=\"inherit\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\">Live Score </Typography>\r\n\r\n          <span style={{ flexGrow: 1 }}></span>\r\n\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;","const API_KEY= \"E0YKXFGTaTTIflC51qCO8nKcGK02\"\r\n\r\n\r\n\r\n\r\nexport const getMatches = () =>{\r\n    const url =`https://cricapi.com/api/matches?apikey=${API_KEY}`\r\n\r\n    return fetch(url)\r\n    .then((response) => response.json())\r\n    .catch((error)=> console.log(\"ERROR : \", error));\r\n}\r\n\r\nexport const getMatchDetail = (id) => {\r\n    const url =`https://cricapi.com/api/cricketScore?apikey=${API_KEY}&unique_id=${id}`\r\n\r\n    return fetch(url)\r\n    .then((response)=> response.json())\r\n    .catch((error) => console.log(error))\r\n}","import React, {Fragment, useState} from 'react'\r\nimport { Button, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Typography } from '@material-ui/core'\r\n\r\nimport { getMatchDetail, getMatches } from './api/Api'\r\n\r\n\r\nconst MyCard = ({match}) =>{\r\n    const [detail, setDetail] = useState({}) \r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n\r\n    const  handleClick= (id)=>{\r\n        getMatchDetail(id)\r\n        .then((data) => {\r\n            console.log(\"Match Data\", data)\r\n            setDetail(data)\r\n            handleOpen()\r\n           })\r\n        .catch((error)=> console.log(error))\r\n    }\r\n\r\n\r\n\r\n\r\nconst getMatchCard = () =>{\r\n    return (\r\n        <Card style={{marginTop: 20}}>\r\n            <CardContent>\r\n                <Grid container justify=\"center\" alignItems=\"center\" spacing={4}>\r\n                  <Grid item>\r\n                      <Typography variant=\"h5\">{match['team-1']}</Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                     {/* <img src={require(\"../src/img/vs.jpg\")} /> */}\r\n                     {/* <img\r\n                      style={{width: 85, height:160}}\r\n                      src={require(\"./img/vs.png\")} \r\n                      alt=\"\" /> */}\r\n                          <img\r\n                style={{ width: 85, height:160 }}\r\n                src={require(\"./img/vs.png\")}\r\n                alt=\"\"\r\n              />\r\n                  </Grid>\r\n                  <Grid item>\r\n                      <Typography variant=\"h5\">{match['team-2']}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n          \r\n            </CardContent>\r\n            <CardActions>\r\n                <Grid container justify=\"center\">\r\n                <Button \r\n                onClick = {() =>{\r\n                    handleClick(match.unique_id)\r\n                 } } \r\n                variant=\"outlined\" color=\"primary\">\r\n                    Show Details\r\n                </Button>\r\n                <Button style={{marginLeft: 7}} variant=\"outlined\" color=\"primary\">\r\n                 Start Time {new Date(match.dateTimeGMT).toLocaleString()}\r\n                </Button>\r\n                </Grid>\r\n            </CardActions>\r\n            \r\n        </Card>\r\n    )\r\n}\r\n\r\nconst handleClose= () =>{\r\n    setOpen(false)\r\n\r\n}\r\nconst handleOpen= () =>{\r\n    setOpen(true)\r\n    \r\n}\r\nconst getDialog=()=>(\r\n    <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n            {\"match Details...\"}\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    <Typography>\r\n                        {detail.stat}\r\n                    </Typography>\r\n                    <Typography>\r\n                           Match <span style={{fontStyle:\"italic\", fontWeight: \"bold\"}}> \r\n                           {detail.matchStarted? \"Started\": \"Still not Started\"}</span>\r\n                    </Typography>\r\n                    <Typography>\r\n                           Score <span style={{fontStyle:\"italic\", fontWeight: \"bold\"}}> </span>\r\n                           {detail.score}\r\n                    </Typography>\r\n\r\n                </DialogContentText>\r\n            </DialogContent>\r\n        </DialogTitle>\r\n\r\n     <DialogActions>\r\n         <Button onClick={handleClose} color=\"primary\" autoFocus> Close </Button>\r\n     </DialogActions>\r\n    </Dialog>\r\n)\r\n   \r\n    return(\r\n\r\n        <Fragment>\r\n               {getMatchCard()}\r\n               {getDialog()}\r\n        </Fragment>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default MyCard\r\n","import React, {useState, useEffect} from \"react\"\nimport logo from './logo.svg'\nimport './App.css';\nimport { Button, formatMs, Grid, Typography } from '@material-ui/core';\nimport Navbar from './componets/Navbar';\nimport MyCard from './MyCard';\nimport {getMatches} from './api/Api'\n\n\nfunction App() {\n\nconst [matches, setMatches]=useState([])\n// console.log(matches);\n\n   useEffect(() => {\n    getMatches()\n   .then((data) =>\n    setMatches(data.matches))\n\n  //  .then((data) => console.log(setMatches(data.matches)))\n    .catch((error) => alert (\"Could not load data\"));\n\n},[]);\n\n\n  return (\n    <div className=\"App\">\n   \n      <Navbar />\n      <Typography variant=\"h3\" style={{marginTop:20}}>Welcome to Cricket Live Score</Typography>\n    \n      <Grid container>\n        <Grid sm=\"2\"></Grid>\n        <Grid sm=\"8\">\n        {\n        matches.map((match) => (\n\n          <MyCard match={ match }/>\n        \n        ))}\n        </Grid>\n      </Grid>\n    \n      \n    </div>\n  )\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}